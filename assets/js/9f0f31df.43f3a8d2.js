"use strict";(self.webpackChunkdev_galoy_io=self.webpackChunkdev_galoy_io||[]).push([[362],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>v});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),m=p(n),d=o,v=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return n?a.createElement(v,l(l({ref:t},c),{},{components:n})):a.createElement(v,l({ref:t},c))}));function v(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,l=new Array(i);l[0]=d;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r[m]="string"==typeof e?e:o,l[1]=r;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6560:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>p});var a=n(7462),o=(n(7294),n(3905));const i={id:"postman",title:"Postman collection",slug:"/api/postman"},l=void 0,r={unversionedId:"api/postman",id:"api/postman",title:"Postman collection",description:"Online docs",source:"@site/docs/api/d-postman.md",sourceDirName:"api",slug:"/api/postman",permalink:"/api/postman",draft:!1,tags:[],version:"current",frontMatter:{id:"postman",title:"Postman collection",slug:"/api/postman"},sidebar:"apiSidebar",previous:{title:"Send and receive satoshis",permalink:"/api/sats"},next:{title:"Learn more",permalink:"/api/learn-more"}},s={},p=[{value:"Online docs",id:"online-docs",level:2},{value:"Local development",id:"local-development",level:2},{value:"Collection",id:"collection",level:3},{value:"Environment variables",id:"environment-variables",level:3},{value:"Usage",id:"usage",level:3},{value:"Local <code>dev</code> API access",id:"local-dev-api-access",level:3},{value:"<code>staging</code> and <code>mainnet</code> API access",id:"staging-and-mainnet-api-access",level:3}],c={toc:p},m="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(m,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"online-docs"},"Online docs"),(0,o.kt)("p",null,"For the queries applied in multiple languages visit the Galoy API Postman collection documentation at:\n",(0,o.kt)("a",{parentName:"p",href:"https://documenter.getpostman.com/view/29391384/2s9YCAQq3z#66c6973a-3e06-410b-b035-df2cb2e986bd"},"documenter.getpostman.com/view/29391384/2s9YCAQq3z#66c6973a-3e06-410b-b035-df2cb2e986bd")),(0,o.kt)("h2",{id:"local-development"},"Local development"),(0,o.kt)("p",null,"We've included the following files here that can be imported into Postman to get up-and-running with the Galoy API."),(0,o.kt)("h3",{id:"collection"},"Collection"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://dev.galoy.io/galoy_graphql_main_api.postman_collection.json"},"galoy_graphql_main_api.postman_collection.json"),": the collection of queries and mutations")),(0,o.kt)("h3",{id:"environment-variables"},"Environment variables"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://dev.galoy.io/galoy-dev.postman_environment.json"},"galoy-dev.postman_environment.json"),": environment variables to hit our testing local setup"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://dev.galoy.io/galoy-staging.postman_environment.json"},"galoy-staging.postman_environment.json"),": environment variables to hit our deployed staging with signet bitcoin"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://dev.galoy.io/galoy-mainnet.postman_environment.json"},"galoy-mainnet.postman_environment.json"),": environment variables to hit our deployed Blink production environment with mainnet bitcoin")),(0,o.kt)("h3",{id:"usage"},"Usage"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Download Postman: ",(0,o.kt)("a",{parentName:"li",href:"https://www.postman.com/"},"www.postman.com")," or use the web version: ",(0,o.kt)("a",{parentName:"li",href:"https://web.postman.co/"},"web.postman.co")),(0,o.kt)("li",{parentName:"ul"},"Import the collection and the respective environment variable files into Postman.")),(0,o.kt)("h3",{id:"local-dev-api-access"},"Local ",(0,o.kt)("inlineCode",{parentName:"h3"},"dev")," API access"),(0,o.kt)("p",null,"For the local ",(0,o.kt)("inlineCode",{parentName:"p"},"dev")," environment"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"clone the ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/GaloyMoney/galoy"},"galoy repo")," and install the dependencies as in ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/GaloyMoney/galoy/blob/main/DEV.md#setup"},"github.com/GaloyMoney/galoy/blob/main/DEV.md#setup")),(0,o.kt)("li",{parentName:"ul"},"use the following commands to start hosting the API locally:",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},'$ TEST="01|02" make reset-integration\n$ make start-main\n'))),(0,o.kt)("li",{parentName:"ul"},"You can then use the mutations in the ",(0,o.kt)("inlineCode",{parentName:"li"},"login flow")," folder to login as one of the test accounts defined in the ",(0,o.kt)("inlineCode",{parentName:"li"},"default.yaml")," file (one is already auto-populated).")),(0,o.kt)("h3",{id:"staging-and-mainnet-api-access"},(0,o.kt)("inlineCode",{parentName:"h3"},"staging")," and ",(0,o.kt)("inlineCode",{parentName:"h3"},"mainnet")," API access"),(0,o.kt)("p",null,"Follow the links to register and get an auth token:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/api"},"Start with Blink")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/api/auth"},"Get an auth token"))))}u.isMDXComponent=!0}}]);